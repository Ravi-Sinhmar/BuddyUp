<style>
  :root {
    --travel-width: 8px;
    --item-width: 87px;
  }

  #navBg {
    width: var(--item-width);
    left: var(--travel-width);
    transition-property: all;
    transition-duration: 0.3s;
    transition-timing-function: ease;
    transition-delay: 0;
  }

  .active {

    color: white;
  }

  #navBg.active {
    width: var(--item-width);
    left: var(--travel-width);
  }

  #moreBox {
    width: fit-content;
    top: 6.8rem;
    right: -8rem;
    transition: right, width;
    transition-duration: 0.4s;
    transition-timing-function: ease;
  }

  #moreBox.active {
    right: 0;
  }
</style>

<body class="overflow-hidden">
  <main class="h-screen max-h-screen box-border overflow-hidden flex flex-col justify-start bg-white  px-4   relative">
    <section class="h-2/6 space-y-3">

      <header class="px-2 pb-1 flex flex-col space-y-3 mt-2">

        <div class="flex justify-between items-center">
          <img class="h-12 ml-1" src="/img/logo.png" alt="">
          <div class="flex gap-5 items-center">

            <img src="/img/more.png" onclick="" class=" more w-5 h-5" alt="More" />

          </div>
        </div>
        <!-- Search Box  to search chats -->
        <div id="searchBox" class="w-full  ">
          <div class="w-full h-fit flex justify-between items-center  shadow-md shadow-gray-300  rounded-full   ring-1 ring-black ps-2 pr-4">
            <input type="text" name="" id="" placeholder="Search..." class="placeholder-black text-black w-full ml-0.5 h-8 text-sm bg-transparent rounded-full px-1 outline-none" />
            <div class="flex justify-center items-center gap-1">
              <img class="w-4 h-4" src="/img/search.webp" alt="emoji" />

            </div>
          </div>
        </div>

      </header>
      <!-- <hr class="border-t-[1px] border-gray-200  rounded-full shadow-sm shadow-gray-300  w-11/12 self-center"> -->
      <div class="flex justify-center">
        <div id="outer" class="w-full h-7 rounded-full flex justify-start gap-3 px-2 relative">
          <span id="navBg" class="h-7 bg-black shadow-sm shadow-gray-500 absolute rounded-full top-0 "></span>
          <div class="navBtnBox active text-black w-fit flex items-center justify-center z-10">
            <button class="navBtn text-xs px-4 ">Messages</button>
          </div>
          <div class="navBtnBox text-black w-fit flex items-center justify-center z-10">
            <button class="navBtn text-xs px-4 ">Requests</button>
          </div>
        </div>
      </div>
    </section>

    <section class="h-4/6 space-y-2 overflow-y-scroll ">


      <!-- Content comes when click on 3 dots in the top right side -->

      <div id="moreBox" class="z-40 py-5 shadow-lg shadow-pink-300 bg-white rounded-md absolute ">
        <div class="text-sm font-semibold text-black flex flex-col gap-3 justify-center items-start px-4">
          <button>Your Profile</button>
          <button>New Chat</button>
          <button>Create Group</button>
          <button>Log Out</button>
        </div>
      </div>


      <!-- List of people with whom  user doing chat -->
      <% if (friendData.length > 0) { %>
      <div class=" flex flex-col space-y-5 ">
        <% friendData.forEach(friend => {  %>
        <% if (friend.state == "sent") { %>


        <div id="<%= friend.chatId %>" class="requestId rounded-md flex justify-between items-center px-2 py-1.5 relative bg-red-600">
          <div class="flex justify-center gap-2">
            <img class="profilePic w-12 h-12 rounded-full" src="/img/<%= friend.profilePic %>" alt="">
            <div class="flex flex-col items-start justify-center gap-0.5">
              <h1 class="name text-sm font-semibold"><%= friend.name %></h1>
            </div>
          </div>

          <div class="flex gap-1">
            <button id="Accept" type="button" class="accept btn-accept flex items-center justify-center px-2.5 py-1 rounded-md bg-green-500 text-white text-xs font-semibold">Accept</button>
            <button id="Delete" type="button" class="delete btn-delete flex items-center justify-center px-2.5 py-1 rounded-md bg-red-500 text-white text-xs font-semibold">Delete</button>
          </div>
        </div>

        <% } %>
        <% })}  %>





      </div>

    </section>
  </main>
  <script>
    const acceptReq = document.querySelectorAll('.accept');
    const deleteReq = document.querySelectorAll('.delete');
    acceptReq.forEach(element => {
      element.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent default form submission
        alert("clicked");

        if (event.target.closest('.requestId')) {

          // getting parent div
          const messageDiv = event.target.closest('.requestId');

          // getting  uid 
          const rid = messageDiv.getAttribute('id');
          alert(rid)

          // Assuming you have the data to send in a variable named 'content'
          const content = {
            Details: "hlo gys"
          };

          fetch(`/requests/accept/${rid}`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json; charset=UTF-8',
                'Accept': 'application/json'
              },
              body: JSON.stringify(content)
            }).then((data) => {
              console.log(data.status)
              return data.json();
            }).then((data) => {

              if (data.message == "Accepted") {
                console.log("Accepted")
                window.location.href = '/success'
              } else if (data.message == "Invalid") {
                window.location.href = '/invalid'

              }

            })
            .catch(err => console.log(err))


        }
      })

    });


    deleteReq.forEach(element => {
      element.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent default form submission

        if (event.target.closest('.requestId')) {

          // getting parent div
          const messageDiv = event.target.closest('.requestId');

          // getting  uid 
          const rid = messageDiv.getAttribute('id');
          // Assuming you have the data to send in a variable named 'content'
          const content = {
            Details: "hlo gys"
          };

          fetch(`/requests/delete/${rid}`, {

              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json; charset=UTF-8',
                'Accept': 'application/json'
              },
              body: JSON.stringify(content)
            }).then((data) => {
              console.log(data.status)
              return data.json();
            }).then((data) => {

              if (data.message == "Deleted") {
                console.log("Deleted")
                window.location.href = '/success'
              }
            })
            .catch(err => console.log(err))


        }
      })

    });
  </script>
  <script src="/js/localStorage.js"></script>