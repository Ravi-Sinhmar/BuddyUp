

<!-- Messagees Content -->
<main id="wrapper" style="z-index: 1;"
    class="  bg-blm z-0  h-svh top-0 bottom-0 left-0 right-0  flex flex-col justify-between items-center transition-colors duration-500 ease-in-out ">
    <nav class="px-5 py-5 space-y-4  w-full  ">
        <div class="flex justify-between items-center">
            <div class="flex justify-center items-center gap-4">
                <h1 class="font-[500] text-black text-xl">Messages</h1>
                <button onclick="redirectToEmail()" class="text-xs bg-blh px-2 py-1 rounded-md border border-blb shadow-sm shadow-blb">Hire Developer</button>
           

            </div>
             <a  id="navBtn" class="cursor-pointer">
            <svg  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-7 text-black">
                <path fill-rule="evenodd" d="M3 6.75A.75.75 0 0 1 3.75 6h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 6.75ZM3 12a.75.75 0 0 1 .75-.75H12a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 12Zm0 5.25a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1-.75-.75Z" clip-rule="evenodd" />
              </svg>
            </a>
        </div>
      

    </nav>

    <div id="msgCustom" class=" <%= custom %> flex h-full w-full flex-col justify-center items-center ">
        <div class="flex flex-col justify-center items-center mb-20 ">
         <img src="/bg/messages.png"  alt="" class="w-32 h-32">
         <h1 class="font-[600] text-xl">No messages</h1>
         <h1 class="text-blt ">Your messages will appear here</h1>
        </div>
       </div>
   
    <!-- List of people with whom  user doing chat -->
    
    <div id="allMsg"
        class=" <%= allMsg %>  bg-blm flex flex-col space-y-3 px-4 h-svh w-full pt-3  overflow-y-scroll">
        <% friendData.forEach(friend => { %>
        <% if (friend.state == "connected") { %>
        <div id="<%= friend.chatId %>"
            class="cursor-pointer bg-blh border border-blb rounded-xl messageId flex justify-between items-center px-4 py-4 relative ">
            <div class="flex justify-center gap-2">
                <img class="profilePic w-12 h-12 rounded-full"
                    src="/img/<%= friend.profilePic %>"
                    alt="" />
                <div class="flex flex-col items-start justify-center gap-0.5">
                    <h1 class="name text-sm text-black font-semibold">
                        <%= friend.name %>
                    </h1>
                    <div
                        class=" lastText overflow-hidden whitespace-nowrap text-blt text-ellipsis max-w-36 w-36 text-xs ">
                       <%= friend.lastMsg %>
                    </div>
                </div>
            </div>
            <div>
                <p class="text-blt text-xs ">
                    <%= friend.time %>
                </p>
            </div>
            <div class="absolute bottom-0 w-4/5  right-1 rounded-full"></div>
        </div>

        
        <% } %>
        
        <% }) %>
    </div>

     

    
</main>
  

<%- include('./partials/footer.ejs') %>

<%- include('./partials/warningBox.ejs') %>
<%- include('./partials/navM.ejs') %>

<script>
function redirectToEmail() {
  const mailtoLink = 'mailto:ravi.sinhmar28@gmail.com?subject=Hire Developer Inquiry';
  window.location.href = mailtoLink;
}

const wrapper = document.getElementById('wrapper');
    const messageIdBtn = document.querySelectorAll('.messageId');
    messageIdBtn.forEach(btn => {
        btn.addEventListener('click', (event) => {
            if (event.target.closest('.messageId')) {
                const messageDiv = event.target.closest(
                    '.messageId');
                const rid = messageDiv.getAttribute('id');
                // getting person name 
                const userNameElement = messageDiv
                    .querySelector('.name');
              
                const name = userNameElement.textContent.trim();
                // getting image name 
                const profilePic = messageDiv.querySelector(
                    '.profilePic');
                let profilePicSrc = profilePic.src;
                profilePicSrc = profilePicSrc.split('/');
                const imageName = profilePicSrc[profilePicSrc
                    .length - 1];

                // create object to store in local Storage
                const localUser = {
                    name: name,
                    profilePic: imageName,
                    rid: rid
                }
                // setting data into local Storage
                setLocalData(localUser);
               
                const data = getLocalData()
               
                window.location.href = `/messages/${rid}`
            }
        })

    })


// logout
logout.addEventListener('click',(event)=>{
    logoutFun();
});

// deleteAccount
deleteAccount.addEventListener('click',(event)=>{
    deleteAccountFun();
});

// 

</script>
<script src="/js/localStorage.js"></script>