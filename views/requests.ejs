
<style>


  #sentSection.visible{
    transform: translateX(0);
  }
  #receivedSection.hide{
    transform: translateX(-120%);
  }

</style>








<main style="z-index: 1;" id="wrapper" class=" bg-blm rounded-xl h-svh top-0 bottom-0 left-0 right-0  flex flex-col justify-between items-center ">
  <nav class="px-6 py-5 space-y-4  w-full  z-10 shadow-sm shadow-blb">
    <div class="flex justify-between items-center">
    <h1 class="font-[600] text-blf text-2xl" >Wassup</h1>

      <a  id="navBtn" class="cursor-pointer">
        <svg  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-7 text-black">
            <path fill-rule="evenodd" d="M3 6.75A.75.75 0 0 1 3.75 6h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 6.75ZM3 12a.75.75 0 0 1 .75-.75H12a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 12Zm0 5.25a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1-.75-.75Z" clip-rule="evenodd" />
          </svg>
        </a>

    </div>
        <div class="flex justify-center items-start h-8">
          <div class="w-1/2 flex flex-col  items-center justify-start h-full">
              <button id="received" class="h-full px-6 text-black ">Received</button>
              <div id="receivedUnderline" class="w-full  bg-blh h-1 rounded-full"></div>
          </div>
          <div class="w-1/2 flex flex-col  items-center justify-start h-full">
              <button id="sent" class="h-full px-6 ">Sent</button>
              <div id="sentUnderline" class="w-full   h-1 rounded-full"></div>

          </div>
      </div>
  </nav>
        
  <% if (!friendData.length > 0 ) { %>

    <div  class=" bg-blm flex flex-col justify-center h-full w-full items-center space-y-3 px-4 fixed top-28 bottom-24 py-2 left-0 right-0 overflow-y-scroll">
      <div class="flex-col flex justify-center items-center mb-44">
       <h1 class="font-[600] text-xl">No Requests</h1>
       <p class=" text-blt font-[500]">New requests will appear here</p>
      </div>
       </div>
<% } %>
          <!-- List of people with whom  user doing chat -->
        
          <% if (friendData.length > 0) { %>
           <div id="receivedSection" class="transition-transform duration-500 ease-in-out bg-blm flex flex-col space-y-3 px-4 fixed top-28 bottom-24 py-2 left-0 right-0 overflow-y-scroll">
           
              <% friendData.forEach(friend => {  %>
            <% if (friend.state === "received") { %>
    <div  id="<%= friend.chatId %>"  class="  bg-blh border border-blb rounded-xl requestId flex justify-between items-center px-4 py-4 relative ">
      <div class="flex justify-center gap-2">
        <img
          class="profilePic w-12 h-12 rounded-full"
          src="/img/<%= friend.profilePic %>"
          alt=""
        />
        <div class="flex flex-col items-start justify-center gap-0.5">
          <h1 class="name  text-sm text-black "><%= friend.name %></h1>
          <!-- <p class="  text-blf  text-xs ">View Profile</p> -->
        </div>
      </div>
      <div class="flex justify-center items-center gap-4">
        <button id="Accept" class="accept px-2 py-1.5 bg-blm rounded-md border border-blb text-blf text-sm " >Accept</button>
        <button id="Delete" class=" delete px-2 py-1.5 bg-red-600 rounded-md border border-blb  text-blm text-sm" >Delete</button>
        
      </div>
  
     
    </div>
    <% } %>
    <% })}  %>
  </div>
  

  
           <!-- ----------------------sent section  -->

           <% if (friendData.length > 0) { %>
     
            <div id="sentSection" class="translate-x-[120%] transition-transform duration-500 ease-in-out bg-blm flex flex-col space-y-3 px-4 fixed top-28 bottom-24 py-2 left-0 right-0 overflow-y-scroll">
             
                <% friendData.forEach(friend => {  %>
              <% if (friend.state === "sent") { %>
            <div  id="<%= friend.chatId %>"  class="   bg-blh border border-blb rounded-xl requestId flex justify-between items-center px-4 py-4 relative ">
              <div class="flex justify-center gap-2">
                <img
                  class="profilePic w-12 h-12 rounded-full"
                  src="/img/<%= friend.profilePic %>"
                  alt=""
                />
                <div class="flex flex-col items-start justify-center gap-0.5">
                  <h1 class="name  text-sm text-black "><%= friend.name %></h1>
                  <!-- <p class="  text-blf  text-xs ">View Profile</p> -->
                </div>
              </div>
              <div class="flex justify-center items-center gap-4">
                <button id="remove" class=" delete px-2 py-1.5 bg-red-600 rounded-md border border-blb  text-blm text-sm" >Remove</button>
                
              </div>
          
      
           </div>
      
           <% } %>
    <% })}  %>

                 </div>
              
               
                 
         

 <!-- Plus Anything, aboslute with above div  -->
</main>
<%- include('footer.ejs') %>
<%- include('blurBox.ejs') %>
<%- include('loader.ejs') %>
<%- include('plusBox') %>
<%- include('warningBox.ejs') %>
<%- include('inputDialog.ejs') %>
<%- include('quoteInput.ejs') %>

<script>

  
  const acceptReq = document.querySelectorAll('.accept');
  const deleteReq = document.querySelectorAll('.delete');
  const sent = document.getElementById('sent');
  const received = document.getElementById('received');
  const receivedUnderline = document.getElementById('receivedUnderline');
  const sentUnderline = document.getElementById('sentUnderline');
  const sentSection = document.getElementById('sentSection');
  const receivedSection = document.getElementById('receivedSection');
  




received.addEventListener('click',(event)=>{
sentUnderline.classList.remove('bg-blh')
receivedUnderline.classList.add('bg-blh')
receivedSection.classList.remove('hide');
sentSection.classList.remove('visible');

});
sent.addEventListener('click',(event)=>{
receivedUnderline.classList.remove('bg-blh')
sentUnderline.classList.add('bg-blh')

sentSection.classList.add('visible');
receivedSection.classList.add('hide');

});









  acceptReq.forEach(element => {
    element.addEventListener('click', (event) => {
      event.preventDefault(); // Prevent default form submission
      alert("clicked");

      if (event.target.closest('.requestId')) {

        // getting parent div
        const requestDiv = event.target.closest('.requestId');

        // getting  uid 
        const rid = requestDiv.getAttribute('id');
        alert(rid)

        // Assuming you have the data to send in a variable named 'content'
        const content = {
          Details: "hlo gys"
        };

        fetch(`/requests/accept/${rid}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json; charset=UTF-8',
              'Accept': 'application/json'
            },
            body: JSON.stringify(content)
          }).then((data) => {
            console.log(data.status)
            return data.json();
          }).then((data) => {

            if (data.message == "Accepted") {
              console.log("Accepted")
              window.location.href = '/success'
            } else if (data.message == "Invalid") {
              window.location.href = '/invalid'

            }

          })
          .catch(err => console.log(err))


      }
    })

  });


  deleteReq.forEach(element => {
    element.addEventListener('click', (event) => {
      event.preventDefault(); // Prevent default form submission

      if (event.target.closest('.requestId')) {

        // getting parent div
        const requestDiv = event.target.closest('.requestId');

        // getting  uid 
        const rid = requestDiv.getAttribute('id');
        // Assuming you have the data to send in a variable named 'content'
        const content = {
          Details: "hlo gys"
        };

        fetch(`/requests/delete/${rid}`, {

            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json; charset=UTF-8',
              'Accept': 'application/json'
            },
            body: JSON.stringify(content)
          }).then((data) => {
            console.log(data.status)
            return data.json();
          }).then((data) => {

            if (data.message == "Deleted") {
              console.log("Deleted")
              window.location.href = '/success'
            }
          })
          .catch(err => console.log(err))


      }
    })

  });

// Go On Profile......
const requestIdBtn = document.querySelectorAll('.requestId');
requestIdBtn.forEach(btn =>{
btn.addEventListener('click', (event)=>{
  // to avoid recognzaton of click on childs
  if (event.target.closest('.requestId') && event.target !=acceptReq && event.target != deleteReq ) {
  
// getting parent div
const requestDiv = event.target.closest('.requestId');

// getting person name 
const userNameElement = requestDiv.querySelector('.name');
console.log(userNameElement);
const name = userNameElement.textContent.trim();
// getting image name 
const profilePic = requestDiv.querySelector('.profilePic');
let profilePicSrc = profilePic.src;

profilePicSrc = profilePicSrc.split('/');
const imageName = profilePicSrc[profilePicSrc.length - 1];

}

})

})

</script>
